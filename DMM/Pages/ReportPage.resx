<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_customerreoprt.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="btn_supplierreport.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAANdEVYdFRpdGxlAFJlcG9ydDsMcqUZAAAIrUlEQVRY
        R5WXeVCU5x3H3yaNSUxiEpO2af+It4maGq2pR4y2YzudTg+tNyAoxXhQLyzWWxKIigeEIJV4gdyXq8ux
        HCKnsnJfiiwgsrAssLvvvnu+ey98O8/DQsmMAnlnvrPH8877/fyu931eBgBD9COPnzAM8zLDMK8wDDPB
        9Z38N+5j2HcUAHLB5+mlJStXTzp6Nu3bgFBRX8C32X07/K+Gzfl05Ttk7Tnnj9TwMRoANXFFRUQifINh
        mEkuTT4YEBt5U1CJqscyVDR24buoe/D0Db3KMMwvGIZ5j2GY9xmGeZdhmNddWfrpCLgxAV6qS/RaJRH4
        VLXc9kF3bSpOXMzC8fOZOHYhA8fOCXE0OB0P6jpQ36bAw8fdED2QwP+0AP/+5hYOBqXiwNdp8AtMQf29
        aFRHu6M22q06/+yyP44s1YsAyOLLklv/VPC9RRiw1EDPtWLfyRiI6zogU+oh7dOhvVeLhqdKFFZ3IFv8
        FDkP21DWKEO1pBcVTXIkZ1djzdZAVJbng5OJwLUJ8DB0hcKVjTEBXmkReGPAJkW/PhOy6mjEfn8RO/3C
        cTJEiIj4EiRk1yIppx7CEgkEhU24JihHRGIpTobegffBSKzefBRnTh1FbsIFKJqvw6qtxMOQ5cTkVVcp
        RgWYIEn1woCtHf2aFDTcXAutTo+C0hqcOheHnYci4bnvEtx2hWGDTyjWeF/E2m3BWLvtLLbsOofDX11B
        XGouisvqcTvob+h7dAlmTgzxhc+JyWtjAZDFCU+St2DA2gYHl4iayFWw2R3QGHhU1rUiSViCG4l5uBIj
        QmRUBiJvZuB6XBZiUvKQkl6MnMJqiGskaH4qhyhwBdjm72BSluJ+MAUgTTkmwKtNCR4YsEjgUMWhJvL3
        cPb3w2RxwGC2oaWjD/erWlFSIUFJRTMeVLagrKYNlfVPUdskxePWbrRKlehl9bj7zXLomsNgVhaj5PRS
        YjJxPACvPY5zg9PcBIfiJqoifof+gQGY7U6YbA7wFju6VTpInikgeaakZm2dKrTLWEjlasgUWshZIzR6
        EwqDlkHfHAKLMh/FQUuICRlnMgmjAzTGbIKTb4St5wYqw1fC2T8As81JZaJyQK03Q67QQa7SU8Ne1gAF
        x0OpNUGlNcNgsqIgcCmMT87D0puDgoDF4wZ4vSFqPZzGetjkV1ERtoICmKwO8FYHBPnNENxtRlreEySJ
        HiE+swFxGfWIE9YjVlgHvckGtdFKS1YYsBh80xlYe7JQcPIzYvLmeAAm1l1bB6e+GtauSJSHfEEBjFYH
        jBYH5CwPucoIudIAGZHCgK4+Azp7DZD26iikxmiF2eagpsZHQbDKhcg/toiYvDUWAFmcWHNlDRy6Clik
        lyC+sJwCGCx26M12GnVCZiPiMxoQK6zHzdt1iBbU4kZaDa6lVMNosdMMmK0O3Du+CMb6AFi70pB3eOG4
        Ad6ouvx3ODRlsLSHoSx4GRzOfujNNpreLoUBnX3kjqhHR68O0h4dnsl1aCfq1sJotkNtsNKS3T2yEIba
        E7BIE5Hrv4CYkGcJeS6MCvBm5aW/wK4uhak1BPfPLKUAOpMNWpMNUUPRplbjSnIlIhMr8d+ECkTEP0R4
        rJhmidVbaSlyDy2AvuoIzO0xEPnNJyZvjwugPOzPsKsKwEvO0/EhABreRtXRqx2O+Gm3Bm2yQbV0cWjp
        5CiAUmeh45p98FPoK/zBt15H5v5PiAl5ZI8J8Jb44p9gV+TRDi76ajHszn5wvA2cwYrL8eWIiC1HeIwY
        YdFihEaVIeTGfVy4VorzV0polhRaM+0F0f750In9wEsikbFn3rgBJj049wfYekTgGwNRcOozCkDqyhos
        NNrWLiIOkk4OEimHZimL5g4WTc9YaHkrejUmGMx2ZO75BJr7e2FsCodw91xiQvYIowKQxbdLz6yCtVsI
        Q/0p5B//DeyOfrB6C1R6C0Kuu6K9WoLg74tx5nIRTl8uRFBEAQIvFUBjtKGXGwRI3z0XmhJfGBou4s6O
        OcRksuuRPDpAcdBKWLpuwVBzHHlHFsLm6Kd1JdKa7NDxgw2pJX1htLpkA2e0UvVwPJ2Y2zvmgCvaCX3t
        WQi2f0RMyG5pTIB3CgO+gFmaCF3VYeQcWkABFDoLrS1Rn8aMPq2JppqoR2OCnOMhVxOZ6CcBEGz/GOp7
        PtBXfY1b3rPHDfBu/onPYW6Phbbcn3ayzeH8oSFnpmnucUnOmdDtMpexPLpZIx1bYqrO2wZd+QmkeM0i
        JmSvSHdFowFMzjuyBKa2G9CKDyDrwK9hsztdkZqHTXuoIU9vzcRcRsTykKl4dBEA3obUrbPB5nhC8+A/
        SN4yk5j8bCwAsjg5x/+3MDZH0g7O3DsPVrvTZcwPppobNKUipuygqUxlRJfKiE4VT/sjxXMmVCI3aEr9
        kOQ+g5j8fDwA74kOLoLxcTg0xb4Q+s6lAHqTndZ1SCTFw+L/L2I8pET3GVBlbgJXtBcJm6YPAZBt/qgA
        72fuWwhDYwjUhTtQErAMt3d8TBuKdPItn4+Q5j0badtm0xSnbJ1F65vsOZOmOcljJpLcpyPBbQZy/RZA
        mb4e6vxdiN8wjZiQ94YXAtAdMQHI+Nd8GGqDwRXuApvvTRtJnbcVbK4X2FxPsDkeUImI3KESbYYyazON
        VJmxEcr0DVCkr4dSuA6KO2uhEK4Dm7cdseunDgG8sAQEgE6B4Mt5io47vtCU7oemeC+4oj3gCn2hLtwN
        9b2dUOd/CXX+drB3fcDmeoPN3QY2xwuqbM9BsCx3KDM3Q0mg0jei+epfEb3mQ+WIMXwhAN2QnF89xSN5
        6yx2MM0kxTOHU5zsMQNJHjOQ6DYdiZun09ombJqGhI3TELdxKuLWT0XsOqIpVDH/mIKoNR+yJ1d+4DVi
        S/ZcgJFZICeS2yZpmg/G0C9foF+5RM4h80+2Y+N6MxrKBDmZiDTNjxV5AxoS+U2uM/Re+AOA/wHJZQk2
        3iRMlgAAAABJRU5ErkJggg==
</value>
  </data>
</root>